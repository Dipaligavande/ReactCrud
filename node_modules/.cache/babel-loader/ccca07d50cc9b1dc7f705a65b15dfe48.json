{"ast":null,"code":"import axios from 'axios';\nconst API_URL = ' http://localhost:3002/users';\nexport const addUsers = async data => {\n  try {\n    return await axios.post(API_URL, data);\n  } catch (error) {\n    console.log(\"error while calling api\", error.message);\n  }\n};\nexport const getUsers = async data => {\n  try {\n    return await axios.get(API_URL);\n  } catch (error) {\n    console.log(\"error while calling getUsers api\", error.message);\n  }\n};\n//get  api for prefilled data\n\nexport const getUser = async data => {\n  try {\n    return await axios.get(`${API_UR}/${data}`);\n  } catch (error) {\n    console.log(\"error while calling getUser api\", error.message);\n  }\n};\n//edit api\nexport const editUsers = async (data, id) => {\n  try {\n    return await axios.put(`${API_URL}/${id}`, data);\n  } catch (error) {\n    console.log(\"error while calling editUsers api\", error.message);\n  }\n};","map":{"version":3,"names":["axios","API_URL","addUsers","data","post","error","console","log","message","getUsers","get","getUser","API_UR","editUsers","id","put"],"sources":["/home/developer/Desktop/reactCrud/crud-app/src/service/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL= ' http://localhost:3002/users';\n\nexport  const addUsers = async(data)=>{\n    try{\n        return await axios.post(API_URL,data);\n    }\n    catch(error){\n        console.log(\"error while calling api\",error.message);\n    }\n}\n\nexport  const getUsers = async(data)=>{\n    try{\n        return await axios.get(API_URL);\n    }\n    catch(error){\n        console.log(\"error while calling getUsers api\",error.message);\n    }\n}\n//get  api for prefilled data\n\nexport  const getUser = async(data)=>{\n    try{\n        return await axios.get(`${API_UR}/${data}`);\n    }\n    catch(error){\n        console.log(\"error while calling getUser api\",error.message);\n    }\n}\n//edit api\nexport  const editUsers = async(data,id)=>{\n    try{\n        return await axios.put(`${API_URL}/${id}`,data);\n    }\n    catch(error){\n        console.log(\"error while calling editUsers api\",error.message);\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAE,8BAA8B;AAE7C,OAAQ,MAAMC,QAAQ,GAAG,MAAMC,IAAI,IAAG;EAClC,IAAG;IACC,OAAO,MAAMH,KAAK,CAACI,IAAI,CAACH,OAAO,EAACE,IAAI,CAAC;EACzC,CAAC,CACD,OAAME,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACF,KAAK,CAACG,OAAO,CAAC;EACxD;AACJ,CAAC;AAED,OAAQ,MAAMC,QAAQ,GAAG,MAAMN,IAAI,IAAG;EAClC,IAAG;IACC,OAAO,MAAMH,KAAK,CAACU,GAAG,CAACT,OAAO,CAAC;EACnC,CAAC,CACD,OAAMI,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAACF,KAAK,CAACG,OAAO,CAAC;EACjE;AACJ,CAAC;AACD;;AAEA,OAAQ,MAAMG,OAAO,GAAG,MAAMR,IAAI,IAAG;EACjC,IAAG;IACC,OAAO,MAAMH,KAAK,CAACU,GAAG,CAAE,GAAEE,MAAO,IAAGT,IAAK,EAAC,CAAC;EAC/C,CAAC,CACD,OAAME,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAACF,KAAK,CAACG,OAAO,CAAC;EAChE;AACJ,CAAC;AACD;AACA,OAAQ,MAAMK,SAAS,GAAG,OAAMV,IAAI,EAACW,EAAE,KAAG;EACtC,IAAG;IACC,OAAO,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEd,OAAQ,IAAGa,EAAG,EAAC,EAACX,IAAI,CAAC;EACnD,CAAC,CACD,OAAME,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAACF,KAAK,CAACG,OAAO,CAAC;EAClE;AACJ,CAAC"},"metadata":{},"sourceType":"module"}